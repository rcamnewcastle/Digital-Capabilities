import React from 'react';
interface ButtonProps extends Pick<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, 'onKeyDown' | 'onClick' | 'tabIndex' | 'role' | 'aria-haspopup' | 'aria-expanded'> {
    ref: React.RefObject<HTMLButtonElement>;
}
export interface DropdownMenuOptions {
    disableFocusFirstItemOnClick?: boolean;
}
interface DropdownMenuResponse {
    readonly buttonProps: ButtonProps;
    readonly itemProps: {
        onKeyDown: (e: React.KeyboardEvent<HTMLAnchorElement>) => void;
        tabIndex: number;
        role: string;
        ref: React.RefObject<HTMLAnchorElement>;
    }[];
    readonly isOpen: boolean;
    readonly setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;
    readonly moveFocus: (itemIndex: number) => void;
}
export default function useDropdownMenu(itemCount: number, options?: DropdownMenuOptions): DropdownMenuResponse;
export {};
