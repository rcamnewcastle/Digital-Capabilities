{"ast":null,"code":"import _slicedToArray from\"C:/Users/mrc720/Documents/GitHub/Digital-Capabilities/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// importing react libraries and community libraries\nimport React from'react';import{useState,useEffect}from'react';import Button from'@mui/material/Button';import KeyboardArrowDownIcon from'@mui/icons-material/KeyboardArrowDown';import Popover from'@mui/material/Popover';import Typography from'@mui/material/Typography';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResourceLinks=function ResourceLinks(props){// use states\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),resources=_useState2[0],setResources=_useState2[1];// use effect\nuseEffect(function(){displayResources();},[props]);// function to categorise user\nfunction determineSectionScore(){if(props.score<=14){return\"Beginner\";}else if(props.score<=28){return\"Intermediate\";}else{return\"Advanced\";}}// function to start making list of resources in passed parameter\nfunction displayResources(){// initialising and setting\nvar strings=[];var userScore=determineSectionScore();// cycle through all the links\nfor(var i=0;i<props.resourceData.length;i++){// select correct resources to display\nvar scoreMatches=false;for(var j=0;j<props.resourceData[i].weighting.length;j++){if(props.resourceData[i].weighting[j]===userScore||props.resourceData[i].weighting[j]==='General'){scoreMatches=true;}}// push the selected resource onto an array\nif(scoreMatches===true){strings.push(/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:props.resourceData[i].link,target:\"_blank\",children:props.resourceData[i].label})}));}}// set the new array to be displayed to the user\nsetResources(strings);}// menu contoller (open menu when the user clicks the link)\nvar _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),anchorEl1=_React$useState2[0],setAnchorEl1=_React$useState2[1];var handleClick1=function handleClick1(event){setAnchorEl1(event.currentTarget);};var handleClose1=function handleClose1(){setAnchorEl1(null);};var open1=Boolean(anchorEl1);var id1=open1?'simple-popover':undefined;return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-wrapper\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"text\",className:\"dropdown-button\",\"aria-describedby\":id1,onClick:handleClick1,children:[\"Click to see resource links \",/*#__PURE__*/_jsx(KeyboardArrowDownIcon,{})]}),/*#__PURE__*/_jsx(Popover,{id:id1,open:open1,anchorEl:anchorEl1,onClose:handleClose1,anchorOrigin:{vertical:'bottom',horizontal:'center'},transformOrigin:{vertical:'top',horizontal:'center'},children:/*#__PURE__*/_jsx(Typography,{sx:{p:2},children:/*#__PURE__*/_jsx(\"ol\",{children:resources})})})]});};export default ResourceLinks;","map":{"version":3,"sources":["C:/Users/mrc720/Documents/GitHub/Digital-Capabilities/src/components/ResourceLinks.js"],"names":["React","useState","useEffect","Button","KeyboardArrowDownIcon","Popover","Typography","ResourceLinks","props","resources","setResources","displayResources","determineSectionScore","score","strings","userScore","i","resourceData","length","scoreMatches","j","weighting","push","link","label","anchorEl1","setAnchorEl1","handleClick1","event","currentTarget","handleClose1","open1","Boolean","id1","undefined","vertical","horizontal","p"],"mappings":"4KAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,uCAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAE7B;AACA,cAAkCP,QAAQ,CAAC,EAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eAEA;AACAR,SAAS,CAAC,UAAM,CACZS,gBAAgB,GACnB,CAFQ,CAEN,CAACH,KAAD,CAFM,CAAT,CAIA;AACA,QAASI,CAAAA,qBAAT,EACA,CACI,GAAGJ,KAAK,CAACK,KAAN,EAAe,EAAlB,CACA,CACI,MAAO,UAAP,CACH,CAHD,IAIK,IAAGL,KAAK,CAACK,KAAN,EAAe,EAAlB,CACL,CACI,MAAO,cAAP,CACH,CAHI,IAKL,CACI,MAAO,UAAP,CACH,CACJ,CAED;AACA,QAASF,CAAAA,gBAAT,EACA,CACI;AACA,GAAIG,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,SAAS,CAAGH,qBAAqB,EAArC,CAEA;AACA,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGR,KAAK,CAACS,YAAN,CAAmBC,MAAvC,CAA+CF,CAAC,EAAhD,CACA,CACI;AACA,GAAIG,CAAAA,YAAY,CAAG,KAAnB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGZ,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBK,SAAtB,CAAgCH,MAApD,CAA4DE,CAAC,EAA7D,CACA,CACI,GAAGZ,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBK,SAAtB,CAAgCD,CAAhC,IAAuCL,SAAvC,EAAoDP,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBK,SAAtB,CAAgCD,CAAhC,IAAuC,SAA9F,CACA,CACID,YAAY,CAAG,IAAf,CACH,CACJ,CAED;AACA,GAAGA,YAAY,GAAK,IAApB,CACA,CACIL,OAAO,CAACQ,IAAR,cAAa,iCAAI,UAAG,IAAI,CAAEd,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBO,IAA/B,CAAqC,MAAM,CAAC,QAA5C,UAAsDf,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBQ,KAA5E,EAAJ,EAAb,EACH,CACJ,CAED;AACAd,YAAY,CAACI,OAAD,CAAZ,CACH,CAED;AACA,oBAAkCd,KAAK,CAACC,QAAN,CAAe,IAAf,CAAlC,oDAAOwB,SAAP,qBAAkBC,YAAlB,qBACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BF,YAAY,CAACE,KAAK,CAACC,aAAP,CAAZ,CACH,CAFD,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBJ,YAAY,CAAC,IAAD,CAAZ,CACH,CAFD,CAGA,GAAMK,CAAAA,KAAK,CAAGC,OAAO,CAACP,SAAD,CAArB,CACA,GAAMQ,CAAAA,GAAG,CAAGF,KAAK,CAAG,gBAAH,CAAsBG,SAAvC,CAEA,mBACI,aAAK,SAAS,CAAC,kBAAf,wBAGI,MAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,SAAS,CAAC,iBAAjC,CAAmD,mBAAkBD,GAArE,CAA0E,OAAO,CAAEN,YAAnF,uDACgC,KAAC,qBAAD,IADhC,GAHJ,cAQI,KAAC,OAAD,EACI,EAAE,CAAEM,GADR,CAEI,IAAI,CAAEF,KAFV,CAGI,QAAQ,CAAEN,SAHd,CAII,OAAO,CAAEK,YAJb,CAKI,YAAY,CAAE,CACVK,QAAQ,CAAE,QADA,CAEVC,UAAU,CAAE,QAFF,CALlB,CASI,eAAe,CAAE,CACbD,QAAQ,CAAE,KADG,CAEbC,UAAU,CAAE,QAFC,CATrB,uBAgBI,KAAC,UAAD,EAAY,EAAE,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAhB,uBACI,oBACK5B,SADL,EADJ,EAhBJ,EARJ,GADJ,CAiCH,CAtGD,CAwGA,cAAeF,CAAAA,aAAf","sourcesContent":["// importing react libraries and community libraries\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ResourceLinks = (props) => {\r\n\r\n    // use states\r\n    const [resources, setResources] = useState([]);\r\n\r\n    // use effect\r\n    useEffect(() => {\r\n        displayResources();\r\n    }, [props])\r\n\r\n    // function to categorise user\r\n    function determineSectionScore()\r\n    {\r\n        if(props.score <= 14)\r\n        {\r\n            return \"Beginner\";\r\n        }\r\n        else if(props.score <= 28)\r\n        {\r\n            return \"Intermediate\";\r\n        }\r\n        else\r\n        {\r\n            return \"Advanced\";\r\n        }\r\n    }\r\n\r\n    // function to start making list of resources in passed parameter\r\n    function displayResources()\r\n    {\r\n        // initialising and setting\r\n        let strings = [];\r\n        var userScore = determineSectionScore();\r\n\r\n        // cycle through all the links\r\n        for (var i = 0; i < props.resourceData.length; i++)\r\n        {\r\n            // select correct resources to display\r\n            var scoreMatches = false;\r\n            for (var j = 0; j < props.resourceData[i].weighting.length; j++)\r\n            {\r\n                if(props.resourceData[i].weighting[j] === userScore || props.resourceData[i].weighting[j] === 'General')\r\n                {\r\n                    scoreMatches = true;\r\n                }\r\n            }\r\n\r\n            // push the selected resource onto an array\r\n            if(scoreMatches === true)\r\n            {\r\n                strings.push(<li><a href={props.resourceData[i].link} target='_blank'>{props.resourceData[i].label}</a></li>);\r\n            }\r\n        }\r\n\r\n        // set the new array to be displayed to the user\r\n        setResources(strings);\r\n    }\r\n\r\n    // menu contoller (open menu when the user clicks the link)\r\n    const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n    const handleClick1 = (event) => {\r\n        setAnchorEl1(event.currentTarget);\r\n    };\r\n    const handleClose1 = () => {\r\n        setAnchorEl1(null);\r\n    };\r\n    const open1 = Boolean(anchorEl1);\r\n    const id1 = open1 ? 'simple-popover' : undefined;\r\n\r\n    return(\r\n        <div className='dropdown-wrapper'>\r\n\r\n            {/* display button for user to click */}\r\n            <Button variant=\"text\" className='dropdown-button' aria-describedby={id1} onClick={handleClick1}>\r\n                Click to see resource links <KeyboardArrowDownIcon />\r\n            </Button>\r\n\r\n            {/* display menu when clicked */}\r\n            <Popover\r\n                id={id1}\r\n                open={open1}\r\n                anchorEl={anchorEl1}\r\n                onClose={handleClose1}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                \r\n                {/* display contents of the popover menu */}\r\n                <Typography sx={{ p: 2 }}>\r\n                    <ol>\r\n                        {resources}\r\n                    </ol>\r\n                </Typography>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceLinks;"]},"metadata":{},"sourceType":"module"}