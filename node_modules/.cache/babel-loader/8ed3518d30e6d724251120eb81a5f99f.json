{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc720\\\\Documents\\\\GitHub\\\\Digital-Capabilities\\\\src\\\\components\\\\ResourceLinks.js\",\n    _s = $RefreshSig$();\n\n// importing react libraries and community libraries\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResourceLinks = props => {\n  _s();\n\n  // use states\n  const [resources, setResources] = useState([]); // use effect\n\n  useEffect(() => {\n    displayResources();\n  }, [props]); // function to categorise user\n\n  function determineSectionScore() {\n    if (props.score <= 14) {\n      return \"Beginner\";\n    } else if (props.score <= 28) {\n      return \"Intermediate\";\n    } else {\n      return \"Advanced\";\n    }\n  } // function to start making list of resources in passed parameter\n\n\n  function displayResources() {\n    // initialising and setting\n    let strings = [];\n    var userScore = determineSectionScore(); // cycle through all the links\n\n    for (var i = 0; i < props.resourceData.length; i++) {\n      // select correct resources to display\n      var scoreMatches = false;\n\n      for (var j = 0; j < props.resourceData[i].weighting.length; j++) {\n        if (props.resourceData[i].weighting[j] === userScore || props.resourceData[i].weighting[j] === 'General') {\n          scoreMatches = true;\n        }\n      } // push the selected resource onto an array\n\n\n      if (scoreMatches === true) {\n        strings.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: props.resourceData[i].link,\n            target: \"_blank\",\n            children: props.resourceData[i].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, this));\n      }\n    } // set the new array to be displayed to the user\n\n\n    setResources(strings);\n  } // menu contoller (open menu when the user clicks the link)\n\n\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\n\n  const handleClick1 = event => {\n    setAnchorEl1(event.currentTarget);\n  };\n\n  const handleClose1 = () => {\n    setAnchorEl1(null);\n  };\n\n  const open1 = Boolean(anchorEl1);\n  const id1 = open1 ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      className: \"dropdown-button\",\n      \"aria-describedby\": id1,\n      onClick: handleClick1,\n      children: [\"Click to see resource links \", /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id1,\n      open: open1,\n      anchorEl: anchorEl1,\n      onClose: handleClose1,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: resources\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResourceLinks, \"ABiaIM6KZHMX9pJN/hbuBBgfwo8=\");\n\n_c = ResourceLinks;\nexport default ResourceLinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResourceLinks\");","map":{"version":3,"sources":["C:/Users/mrc720/Documents/GitHub/Digital-Capabilities/src/components/ResourceLinks.js"],"names":["React","useState","useEffect","Button","KeyboardArrowDownIcon","Popover","Typography","ResourceLinks","props","resources","setResources","displayResources","determineSectionScore","score","strings","userScore","i","resourceData","length","scoreMatches","j","weighting","push","link","label","anchorEl1","setAnchorEl1","handleClick1","event","currentTarget","handleClose1","open1","Boolean","id1","undefined","vertical","horizontal","p"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAH6B,CAK7B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT,CAN6B,CAU7B;;AACA,WAASI,qBAAT,GACA;AACI,QAAGJ,KAAK,CAACK,KAAN,IAAe,EAAlB,EACA;AACI,aAAO,UAAP;AACH,KAHD,MAIK,IAAGL,KAAK,CAACK,KAAN,IAAe,EAAlB,EACL;AACI,aAAO,cAAP;AACH,KAHI,MAKL;AACI,aAAO,UAAP;AACH;AACJ,GAzB4B,CA2B7B;;;AACA,WAASF,gBAAT,GACA;AACI;AACA,QAAIG,OAAO,GAAG,EAAd;AACA,QAAIC,SAAS,GAAGH,qBAAqB,EAArC,CAHJ,CAKI;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,YAAN,CAAmBC,MAAvC,EAA+CF,CAAC,EAAhD,EACA;AACI;AACA,UAAIG,YAAY,GAAG,KAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBK,SAAtB,CAAgCH,MAApD,EAA4DE,CAAC,EAA7D,EACA;AACI,YAAGZ,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBK,SAAtB,CAAgCD,CAAhC,MAAuCL,SAAvC,IAAoDP,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBK,SAAtB,CAAgCD,CAAhC,MAAuC,SAA9F,EACA;AACID,UAAAA,YAAY,GAAG,IAAf;AACH;AACJ,OATL,CAWI;;;AACA,UAAGA,YAAY,KAAK,IAApB,EACA;AACIL,QAAAA,OAAO,CAACQ,IAAR,eAAa;AAAA,iCAAI;AAAG,YAAA,IAAI,EAAEd,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBO,IAA/B;AAAqC,YAAA,MAAM,EAAC,QAA5C;AAAA,sBAAsDf,KAAK,CAACS,YAAN,CAAmBD,CAAnB,EAAsBQ;AAA5E;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAAb;AACH;AACJ,KAvBL,CAyBI;;;AACAd,IAAAA,YAAY,CAACI,OAAD,CAAZ;AACH,GAxD4B,CA0D7B;;;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4B1B,KAAK,CAACC,QAAN,CAAe,IAAf,CAAlC;;AACA,QAAM0B,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,YAAY,CAACE,KAAK,CAACC,aAAP,CAAZ;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,QAAMK,KAAK,GAAGC,OAAO,CAACP,SAAD,CAArB;AACA,QAAMQ,GAAG,GAAGF,KAAK,GAAG,gBAAH,GAAsBG,SAAvC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAC,iBAAjC;AAAmD,0BAAkBD,GAArE;AAA0E,MAAA,OAAO,EAAEN,YAAnF;AAAA,8DACgC,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,cADhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,OAAD;AACI,MAAA,EAAE,EAAEM,GADR;AAEI,MAAA,IAAI,EAAEF,KAFV;AAGI,MAAA,QAAQ,EAAEN,SAHd;AAII,MAAA,OAAO,EAAEK,YAJb;AAKI,MAAA,YAAY,EAAE;AACVK,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OALlB;AASI,MAAA,eAAe,EAAE;AACbD,QAAAA,QAAQ,EAAE,KADG;AAEbC,QAAAA,UAAU,EAAE;AAFC,OATrB;AAAA,6BAgBI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SAAhB;AAAA,+BACI;AAAA,oBACK5B;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAtGD;;GAAMF,a;;KAAAA,a;AAwGN,eAAeA,aAAf","sourcesContent":["// importing react libraries and community libraries\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport Popover from '@mui/material/Popover';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst ResourceLinks = (props) => {\r\n\r\n    // use states\r\n    const [resources, setResources] = useState([]);\r\n\r\n    // use effect\r\n    useEffect(() => {\r\n        displayResources();\r\n    }, [props])\r\n\r\n    // function to categorise user\r\n    function determineSectionScore()\r\n    {\r\n        if(props.score <= 14)\r\n        {\r\n            return \"Beginner\";\r\n        }\r\n        else if(props.score <= 28)\r\n        {\r\n            return \"Intermediate\";\r\n        }\r\n        else\r\n        {\r\n            return \"Advanced\";\r\n        }\r\n    }\r\n\r\n    // function to start making list of resources in passed parameter\r\n    function displayResources()\r\n    {\r\n        // initialising and setting\r\n        let strings = [];\r\n        var userScore = determineSectionScore();\r\n\r\n        // cycle through all the links\r\n        for (var i = 0; i < props.resourceData.length; i++)\r\n        {\r\n            // select correct resources to display\r\n            var scoreMatches = false;\r\n            for (var j = 0; j < props.resourceData[i].weighting.length; j++)\r\n            {\r\n                if(props.resourceData[i].weighting[j] === userScore || props.resourceData[i].weighting[j] === 'General')\r\n                {\r\n                    scoreMatches = true;\r\n                }\r\n            }\r\n\r\n            // push the selected resource onto an array\r\n            if(scoreMatches === true)\r\n            {\r\n                strings.push(<li><a href={props.resourceData[i].link} target='_blank'>{props.resourceData[i].label}</a></li>);\r\n            }\r\n        }\r\n\r\n        // set the new array to be displayed to the user\r\n        setResources(strings);\r\n    }\r\n\r\n    // menu contoller (open menu when the user clicks the link)\r\n    const [anchorEl1, setAnchorEl1] = React.useState(null);\r\n    const handleClick1 = (event) => {\r\n        setAnchorEl1(event.currentTarget);\r\n    };\r\n    const handleClose1 = () => {\r\n        setAnchorEl1(null);\r\n    };\r\n    const open1 = Boolean(anchorEl1);\r\n    const id1 = open1 ? 'simple-popover' : undefined;\r\n\r\n    return(\r\n        <div className='dropdown-wrapper'>\r\n\r\n            {/* display button for user to click */}\r\n            <Button variant=\"text\" className='dropdown-button' aria-describedby={id1} onClick={handleClick1}>\r\n                Click to see resource links <KeyboardArrowDownIcon />\r\n            </Button>\r\n\r\n            {/* display menu when clicked */}\r\n            <Popover\r\n                id={id1}\r\n                open={open1}\r\n                anchorEl={anchorEl1}\r\n                onClose={handleClose1}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n            >\r\n                \r\n                {/* display contents of the popover menu */}\r\n                <Typography sx={{ p: 2 }}>\r\n                    <ol>\r\n                        {resources}\r\n                    </ol>\r\n                </Typography>\r\n            </Popover>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceLinks;"]},"metadata":{},"sourceType":"module"}