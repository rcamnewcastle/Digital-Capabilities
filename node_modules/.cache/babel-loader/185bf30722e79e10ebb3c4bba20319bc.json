{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrc720\\\\Documents\\\\GitHub\\\\Digital-Capabilities\\\\src\\\\components\\\\UserDescription.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserDescription = props => {\n  _s();\n\n  // use state to create dynamic hook\n  const [messageType, setMessageType] = useState(\"\");\n\n  function displayMessageType() {\n    // use prop parameter to dynamically generate description\n    var totalScore = 0;\n    props.inputData.forEach(element => {\n      totalScore = totalScore + element;\n    });\n\n    if (totalScore < 72) {\n      setMessageType(\"You can use digital technologies for simple tasks and need to work with an expert/mentor for highly structured support and modeling.\");\n    } else if (totalScore < 108) {\n      setMessageType(\"You can use digital technologies for simple tasks and need prompting and/or advice from an expert/mentor.\");\n    } else if (totalScore < 144) {\n      setMessageType(\"You can use digital technologies for regular and other well-defined tasks. You can solve straightforward problems and may request support from an expert/mentor.\");\n    } else if (totalScore < 180) {\n      setMessageType(\"You can use digital technologies for well-defined tasks independently. You can solve non-regular problems independently.\");\n    } else if (totalScore < 216) {\n      setMessageType(\"You can use digital technologies for several tasks independently and act as a mentor for others. You can solve many problems independently.\");\n    } else {\n      setMessageType(\"You can use digital technologies for almost all tasks independently. You can find solutions for almost all the problems.\");\n    }\n  } // run function upon prop parameter input\n\n\n  useEffect(() => {\n    displayMessageType();\n  }, [props]); // display HTML code dynamically\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: messageType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserDescription, \"otvcDIeNDf9VmHbgUAHrp0Q6gDc=\");\n\n_c = UserDescription;\nexport default UserDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDescription\");","map":{"version":3,"sources":["C:/Users/mrc720/Documents/GitHub/Digital-Capabilities/src/components/UserDescription.js"],"names":["useState","useEffect","UserDescription","props","messageType","setMessageType","displayMessageType","totalScore","inputData","forEach","element"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE/B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASM,kBAAT,GACA;AACI;AACA,QAAIC,UAAU,GAAG,CAAjB;AAEAJ,IAAAA,KAAK,CAACK,SAAN,CAAgBC,OAAhB,CAAwBC,OAAO,IAAI;AAC/BH,MAAAA,UAAU,GAAGA,UAAU,GAAGG,OAA1B;AACH,KAFD;;AAIA,QAAGH,UAAU,GAAG,EAAhB,EACN;AACUF,MAAAA,cAAc,CAAC,sIAAD,CAAd;AACT,KAHK,MAID,IAAGE,UAAU,GAAG,GAAhB,EACL;AACUF,MAAAA,cAAc,CAAC,2GAAD,CAAd;AACT,KAHI,MAIA,IAAGE,UAAU,GAAG,GAAhB,EACL;AACUF,MAAAA,cAAc,CAAC,kKAAD,CAAd;AACT,KAHI,MAIA,IAAGE,UAAU,GAAG,GAAhB,EACL;AACUF,MAAAA,cAAc,CAAC,0HAAD,CAAd;AACT,KAHI,MAIA,IAAGE,UAAU,GAAG,GAAhB,EACL;AACUF,MAAAA,cAAc,CAAC,6IAAD,CAAd;AACT,KAHI,MAKL;AACUA,MAAAA,cAAc,CAAC,0HAAD,CAAd;AACT;AACE,GAtC8B,CAwC/B;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT,CAzC+B,CA6C/B;;AACA,sBACI;AAAA,2BACI;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnDD;;GAAMF,e;;KAAAA,e;AAqDN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst UserDescription = (props) => {\r\n\r\n    // use state to create dynamic hook\r\n    const [messageType, setMessageType] = useState(\"\");\r\n\r\n    function displayMessageType()\r\n    {\r\n        // use prop parameter to dynamically generate description\r\n        var totalScore = 0;\r\n\r\n        props.inputData.forEach(element => {\r\n            totalScore = totalScore + element;\r\n        });\r\n\r\n        if(totalScore < 72)\r\n\t\t{\r\n            setMessageType(\"You can use digital technologies for simple tasks and need to work with an expert/mentor for highly structured support and modeling.\");\r\n\t\t}\r\n\t\telse if(totalScore < 108)\r\n\t\t{\r\n            setMessageType(\"You can use digital technologies for simple tasks and need prompting and/or advice from an expert/mentor.\");\r\n\t\t}\r\n\t\telse if(totalScore < 144)\r\n\t\t{\r\n            setMessageType(\"You can use digital technologies for regular and other well-defined tasks. You can solve straightforward problems and may request support from an expert/mentor.\");\r\n\t\t}\r\n\t\telse if(totalScore < 180)\r\n\t\t{\r\n            setMessageType(\"You can use digital technologies for well-defined tasks independently. You can solve non-regular problems independently.\");\r\n\t\t}\r\n\t\telse if(totalScore < 216)\r\n\t\t{\r\n            setMessageType(\"You can use digital technologies for several tasks independently and act as a mentor for others. You can solve many problems independently.\");\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n            setMessageType(\"You can use digital technologies for almost all tasks independently. You can find solutions for almost all the problems.\");\r\n\t\t}\r\n    }\r\n\r\n    // run function upon prop parameter input\r\n    useEffect(() => {\r\n        displayMessageType();\r\n    }, [props])\r\n\r\n    // display HTML code dynamically\r\n    return(\r\n        <div>\r\n            <p>{messageType}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDescription;"]},"metadata":{},"sourceType":"module"}