{"ast":null,"code":"import _slicedToArray from\"C:/Users/mrc720/Documents/GitHub/Digital-Capabilities/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// library imports\nimport ProgressBar from'react-bootstrap/ProgressBar';// bootstrap\nimport'../css/SurveyProgress.css';// css\nimport{useState,useEffect}from'react';// react native\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SurveyProgress=function SurveyProgress(props){// use state\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),linesFilled=_useState2[0],setLinesFilled=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),linesUnFilled=_useState4[0],setLinesUnFilled=_useState4[1];// use effect\nuseEffect(function(){displayFilled();},[linesFilled]);// function to display number of filled and unfilled\nfunction displayFilled(){// coloured bars\nvar strings=[];for(var i=0;i<props.page;i++){strings.push(/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(ProgressBar,{animated:true,now:100})}));}setLinesFilled(strings);// uncoloured bars\nstrings=[];for(var i=6;i>props.page;i--){strings.push(/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(ProgressBar,{animated:true,now:0})}));}setLinesUnFilled(strings);}// display HTML code dynamically\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"wrapper\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"progress-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[linesFilled,linesUnFilled]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Page 1\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Page 2\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Page 3\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Page 4\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Page 5\"})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"Page 6\"})})]})})]})});};export default SurveyProgress;","map":{"version":3,"sources":["C:/Users/mrc720/Documents/GitHub/Digital-Capabilities/src/components/SurveyProgress.js"],"names":["ProgressBar","useState","useEffect","SurveyProgress","props","linesFilled","setLinesFilled","linesUnFilled","setLinesUnFilled","displayFilled","strings","i","page","push"],"mappings":"4KAAA;AACA,MAAOA,CAAAA,WAAP,KAAwB,6BAAxB,CAA4D;AAC5D,MAAO,2BAAP,CAA4D;AAC5D,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAA4D;wFAE5D,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAE9B;AACA,cAAsCH,QAAQ,CAAC,EAAD,CAA9C,wCAAOI,WAAP,eAAoBC,cAApB,eACA,eAA0CL,QAAQ,CAAC,EAAD,CAAlD,yCAAOM,aAAP,eAAsBC,gBAAtB,eAEA;AACAN,SAAS,CAAC,UAAM,CACZO,aAAa,GAChB,CAFQ,CAEN,CAACJ,WAAD,CAFM,CAAT,CAIA;AACA,QAASI,CAAAA,aAAT,EACA,CACI;AACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGP,KAAK,CAACQ,IAA1B,CAAgCD,CAAC,EAAjC,CAAqC,CACjCD,OAAO,CAACG,IAAR,cAAa,iCAAI,KAAC,WAAD,EAAa,QAAQ,KAArB,CAAsB,GAAG,CAAE,GAA3B,EAAJ,EAAb,EACH,CACDP,cAAc,CAACI,OAAD,CAAd,CAEA;AACAA,OAAO,CAAG,EAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGP,KAAK,CAACQ,IAA1B,CAAgCD,CAAC,EAAjC,CAAqC,CACjCD,OAAO,CAACG,IAAR,cAAa,iCAAI,KAAC,WAAD,EAAa,QAAQ,KAArB,CAAsB,GAAG,CAAE,CAA3B,EAAJ,EAAb,EACH,CACDL,gBAAgB,CAACE,OAAD,CAAhB,CACH,CAED;AACA,mBACI,YAAK,SAAS,CAAC,SAAf,uBACI,eAAO,SAAS,CAAC,gBAAjB,wBACI,oCACI,sBACKL,WADL,CAEKE,aAFL,GADJ,EADJ,cAOI,oCACI,mCACI,iCAAI,6BAAJ,EADJ,cAEI,iCAAI,6BAAJ,EAFJ,cAGI,iCAAI,6BAAJ,EAHJ,cAII,iCAAI,6BAAJ,EAJJ,cAKI,iCAAI,6BAAJ,EALJ,cAMI,iCAAI,6BAAJ,EANJ,GADJ,EAPJ,GADJ,EADJ,CAsBH,CApDD,CAsDA,cAAeJ,CAAAA,cAAf","sourcesContent":["// library imports\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';      // bootstrap\r\nimport '../css/SurveyProgress.css';                         // css\r\nimport { useState, useEffect } from 'react';                // react native\r\n\r\nconst SurveyProgress = (props) => {\r\n\r\n    // use state\r\n    const [linesFilled, setLinesFilled] = useState([]);\r\n    const [linesUnFilled, setLinesUnFilled] = useState([]);\r\n\r\n    // use effect\r\n    useEffect(() => {\r\n        displayFilled();\r\n    }, [linesFilled])\r\n\r\n    // function to display number of filled and unfilled\r\n    function displayFilled()\r\n    {\r\n        // coloured bars\r\n        let strings = [];\r\n        for (var i = 0; i < props.page; i++) {\r\n            strings.push(<td><ProgressBar animated now={100}/></td>);\r\n        }\r\n        setLinesFilled(strings);\r\n\r\n        // uncoloured bars\r\n        strings = [];\r\n        for (var i = 6; i > props.page; i--) {\r\n            strings.push(<td><ProgressBar animated now={0}/></td>);\r\n        }\r\n        setLinesUnFilled(strings);\r\n    }\r\n\r\n    // display HTML code dynamically\r\n    return(\r\n        <div className='wrapper'>\r\n            <table className='progress-table'>\r\n                <thead>\r\n                    <tr>\r\n                        {linesFilled}\r\n                        {linesUnFilled}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><p>Page 1</p></td>\r\n                        <td><p>Page 2</p></td>\r\n                        <td><p>Page 3</p></td>\r\n                        <td><p>Page 4</p></td>\r\n                        <td><p>Page 5</p></td>\r\n                        <td><p>Page 6</p></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default SurveyProgress;"]},"metadata":{},"sourceType":"module"}